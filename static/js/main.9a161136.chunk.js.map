{"version":3,"sources":["components/JS/MainPage.js","components/JS/About.js","components/JS/Blog.js","components/JS/Blog/firebase.js","components/JS/Blog/airbnb.js","components/JS/Router.js","App.js","serviceWorker.js","index.js"],"names":["MainPage","className","to","href","Tooltip","hasArrow","label","placement","fontSize","Component","About","class","style","marginRight","blog","fireba","src","process","CustomRouter","basename","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a161136.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../CSS/Main.style.css';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Tooltip } from \"@chakra-ui/core\";\r\nimport { Link, HashRouter } from 'react-router-dom';\r\nclass MainPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Head\">\r\n                <Link to=\"/about\">\r\n                    <div className=\"Avatar\"></div>\r\n                </Link>\r\n                <h1 className=\"title\">Ba Phuong</h1>\r\n                <h2 className=\"description\">Student Of<br></br> Can Tho University</h2>\r\n                <div className=\"contact\">\r\n                    <a href=\"https:fb.com/p.tran3112\" className=\"link\">\r\n                    <Tooltip hasArrow label=\"fb.com/p.tran3112\" placement=\"bottom\" className=\"tooltip\">\r\n                        <FacebookIcon fontSize=\"large\"/>\r\n                    </Tooltip>  \r\n                    </a>\r\n                    <a href=\"https://github.com/ba-p\" className=\"icon link\">\r\n                    <Tooltip hasArrow label=\"github.com/ba-p\" placement=\"bottom\" className=\"tooltip\">\r\n                        <GitHubIcon fontSize=\"large\"/>\r\n                    </Tooltip>\r\n                    </a>\r\n                    <a href=\"mailto:phuongtr3112@gmail.com\" className=\"link\">\r\n                    <Tooltip hasArrow label=\"phuongtr3112@gmail.com\" placement=\"bottom\" className=\"tooltip\">\r\n                        <EmailIcon fontSize=\"large\"/>\r\n                    </Tooltip>\r\n                    </a>\r\n                </div>\r\n                \r\n                    <nav className=\"nav-home\">\r\n                        <ul className=\"list\">\r\n                            <li className=\"item\">\r\n                            <Link to=\"/blog/\" className=\"link\">Blog</Link>\r\n                            </li>\r\n                            <li className=\"item body-menu\">\r\n                            <Link to=\"/about\" className=\"link\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    \r\n                \r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport '../CSS/About.style.css';\r\nimport { Tooltip } from \"@chakra-ui/core\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Link } from 'react-router-dom';\r\nexport default function About(){\r\n    return(\r\n        <div className=\"blog-about\">\r\n            <nav className=\"nav\">\r\n                <ul className=\"list\">\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/blog\">Blog</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            {/* <div className=\"selfie\" src={process.env.PUBLIC_URL + '/avt.jpg'} alt=\"it\"/> */}\r\n            <div className=\"selfie\"></div>\r\n            <p className=\"parag\">Mình tên là Phương như ở trang Home các bạn đã nhìn thấy, thì mình hiện đang học tại trường Đại Học Cần Thơ.\r\n                Mình viết những blog này một phần là do mình muốn lưu lại những kiến thức đã tìm hiểu được và một phần là do mình muốn xem đây là một nơi kỷ niệm những\r\n                ngày đầu tiên mình làm quen với React.\r\n            </p>\r\n            <p>\r\n                Vào năm 2019, mình đang học cấp 3 và đang nghĩ về những ngành mà mình yêu thích, lúc đó mình chỉ phân vân giữa hai ngành\r\n                 là Kinh doanh và Công nghệ thông tin vì năm cấp 3 mình chỉ giỏi hai môn là Toán và Lý, một phần là mình thích làm việc với\r\n                 máy tính và logic nhưng lại rất sợ lập trình vì khi học Pascal mình chẳng hiểu gì cả. Nhưng rồi cuối cùng mình cũng chọn ngành này\r\n                 vì muốn thử thách bản thân thử xem. Ngày biết kết quả thi, mình được tận 25 điểm với 9.8 môn Toán, điểm số mà rất nhiều người mơ ước\r\n                 nhưng mình vẫn chọn trường Đại Học Cần Thơ vì mình biết rằng ngành này chỉ tự học là chính, nên dù học ở Bách Khoa hay ở đây đều như \r\n                 nhau.\r\n            </p>\r\n            <p>\r\n                Tháng 7 năm 2019, sau khi biết mình đã đậu vào ngành mình yêu thích, mình bắt đầu tìm hiểu về nó, bắt đầu chập chửng với ngôn ngữ đầu tiên là\r\n                C, mình cứ nghĩ rằng sẽ khó hơn Pascal hàng trăm lần nhưng càng học mình chẳng hiểu sao lại yêu lập trình đến thế. Nó chẳng giống với những\r\n                môn học khác, đòi hỏi suy nghĩ logic rất nhiều để giải quyết vấn đề. Sau khi học xong cơ bản về C, thì tháng 10 mình cùng vài người bạn thi Codewar của FPT và\r\n                may mắn được giải ba và sau đó mình muốn thử thách bản thân thêm nữa bằng việc học Web và Codersx là nơi mình chọn để có thể theo đuổi đam mê của mình.\r\n            </p>\r\n            <p>\r\n                Vào tháng 12 năm 2019, mình bắt đầu học những khóa đầu tiên như JavaScript, HTML, CSS, Git,... và rồi ngày 20 tháng 4 năm 2020, mình đăng kí khóa 2020 rồi bắt đầu học đến khi mình\r\n                viết bài blog này là vào ngày 20 tháng 5, vừa tròn đúng một tháng. Nó đã vượt xa mục tiêu mà mình đã đề ra, mình cảm thấy rất tự hào về bản thân cũng như có thể biết được khả năng của\r\n                bản thân là không có giới hạn. Trong quá trình tự học, mình đã gặp khá nhiều khó khăn nhưng cũng may là có các cộng đồng lập trình viên để mình có thể hỏi và học tập cũng như Google giờ đây\r\n                đã trở thành một công cụ khá đắc lực đối với mình :D \r\n            </p>\r\n            <p>\r\n                Hiện tại mình vẫn đang tiếp tục học những khóa học mà Codersx đề ra, cũng như tự đặt thêm nhiều mục tiêu cho bản thân trong những tháng tới. Mục tiêu của mình là khi ra trường đã có thể ứng tuyển\r\n                ở vị trị Full Stack ở một công ty nào đó và đó là mục tiêu vô cùng khó khăn nhưng mình tin là mình làm được. Còn bạn, sau khi đọc bài viết này bạn đã đặt mục tiêu gì cho bản thân hay chưa ?\r\n            </p>\r\n            <p>\r\n                <a href=\"https:fb.com/p.tran3112\" className=\"link\" style={{marginRight:30}}>\r\n                    <Tooltip hasArrow label=\"fb.com/p.tran3112\" placement=\"bottom\" className=\"tooltip\">\r\n                        <FacebookIcon fontSize=\"large\"/>\r\n                    </Tooltip>  \r\n                </a>\r\n                <a href=\"mailto:phuongtr3112@gmail.com\" className=\"link\">\r\n                    <Tooltip hasArrow label=\"phuongtr3112@gmail.com\" placement=\"bottom\" className=\"tooltip\">\r\n                        <EmailIcon fontSize=\"large\"/>\r\n                    </Tooltip>\r\n                </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../CSS/Blog.style.css';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Tooltip } from \"@chakra-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function blog(){\r\n    return(\r\n        <div>\r\n            <nav className=\"nav\">\r\n                <ul className=\"list\">\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/about\">About</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <a href=\"#\">\r\n                    <div className=\"Avatar\"></div>\r\n                </a>\r\n                <h1 className=\"title\">Ba Phuong</h1>\r\n                <h2 className=\"description\">Student Of<br></br> Can Tho University</h2>\r\n                <div className=\"contact\">\r\n                    <a href=\"https:fb.com/p.tran3112\" className=\"link\">\r\n                    <Tooltip hasArrow label=\"fb.com/p.tran3112\" placement=\"bottom\" className=\"tooltip\">\r\n                        <FacebookIcon fontSize=\"large\"/>\r\n                    </Tooltip>  \r\n                    </a>\r\n                    <a href=\"https://github.com/ba-p\" className=\"icon link\">\r\n                    <Tooltip hasArrow label=\"github.com/ba-p\" placement=\"bottom\" className=\"tooltip\">\r\n                        <GitHubIcon fontSize=\"large\"/>\r\n                    </Tooltip>\r\n                    </a>\r\n                    <a href=\"mailto:phuongtr3112@gmail.com\" className=\"link\">\r\n                    <Tooltip hasArrow label=\"phuongtr3112@gmail.com\" placement=\"bottom\" className=\"tooltip\">\r\n                        <EmailIcon fontSize=\"large\"/>\r\n                    </Tooltip>\r\n                    </a>\r\n                </div>\r\n                <section className=\"list-blog\">\r\n                    <div className=\"list-item\">\r\n                        <Link className=\"link-blog\" to='/blog/firebase-co-nen-dung-cho-ung-dung-lon/'>\r\n                            <h3>Firebase (Realtime Database) có nên dùng cho các ứng dụng lớn</h3>\r\n                        </Link>\r\n                        <Link className=\"link-blog\" to='/blog/bnb-giu-chan-user'>\r\n                            <h3>Airbnb đã giữ chân user như thế nào ?</h3>\r\n                        </Link>\r\n                    </div>\r\n                </section>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"../../CSS/firebase.style.css\";\r\nimport { Link } from 'react-router-dom'\r\nexport default function fireba(){\r\n    return(\r\n        <div className=\"blog-about\">\r\n             <nav className=\"nav\">\r\n                <ul className=\"list\">\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/blog\">Blog</Link>\r\n                    </li>\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/about\">About</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <img src={process.env.PUBLIC_URL + '/firebase-db.jpg'} className=\"img\"></img>\r\n            <p>\r\n                <h1>Firebase (Realtime Database) - Có nên dùng cho các ứng dụng lớn ?</h1>\r\n            </p>\r\n            <p>\r\n            Nếu bạn là người mới, đang học làm app với Firebase hoặc đang dùng Firebase cho các ứng dụng nhỏ và cảm thấy ổn, bạn hãy bỏ qua bài viết này.\r\n            </p>\r\n            <p>\r\n            Nếu bạn đang cân nhắc sử dụng Firebase cho các ứng dụng lớn, lưu trữ data hoàn toàn trên Firebase, thì mình hy vọng qua bài này sẽ giúp được phần nào.\r\n            </p>\r\n            <p>\r\n            Firebase đã quá nổi tiếng nên mình sẽ không phải giới thiệu nữa. Và mình chỉ nói riêng về Realtime Database của nó thôi chứ không phải tất cả.\r\n             Chúng ta hãy xem xét trường hợp sau đây:\r\n            </p>\r\n            <p>\r\n            Bạn đang cần viết ứng dụng e-commerce và sử dụng Firebase lưu data, trong ứng dụng có tính năng WishList. User sẽ được phép thêm rất nhiều sản\r\n             phẩm vào wish list của họ, miễn là chúng không trùng nhau. Liệu bạn sẽ xây dựng cấu trúc lưu trữ trong Firebase ra sao để tính năng này work tốt nhất có thể:\r\n            </p>\r\n            <p>\r\n                <h3>Giải pháp 1: Mỗi user có key “wish_list”, trong này chứa luôn các products họ yêu thích</h3>\r\n            </p>\r\n            <p>\r\n            Giải pháp này là dễ nhất, đơn giản là chỉ cần add nguyên cái object product vào đây là xong. Cần realtime chỉ cần listen trong wish_list của user logged in.\r\n             Tuy nhiên khi chúng ta update sản phẩm (giá, tình trạng sản phẩm), chúng ta phải quét qua hết tất cả user để update lại cái product trong wish_list của họ. \r\n             Mất rất nhiều thời gian và băng thông và dữ liệu bị mất tính nhất quán rất nhanh. Với lại cách này data nó không được flatten, không phải là best practice.\r\n            </p>\r\n            <p>\r\n                <h3>Giải pháp 2: Tạo riêng WishList ở ngoài, trong mỗi item có key UserID để biết là của ai.</h3>\r\n            </p>\r\n            <p>\r\n            Cách này cũng như cách trên, nhưng đỡ cái là khỏi phải đi quét qua tất cả user, update product nhanh hơn nhiều. Tuy nhiên cách này vướng phải 1 cái khó chịu\r\n             hơn là mình cần realtime cho WishList riêng cho 1 user logged in thôi thì không được. Client lúc nào cũng nhận event mỗi khi bất kỳ user trên hệ thống tương tác vào WishList.\r\n              Điều này ảnh hưởng hiệu năng đáng kể.\r\n            </p>\r\n            <p>\r\n                <h3>Giải pháp 3: Làm theo kiểu RDBMS, chỉ nhớ Product IDs thôi.</h3>\r\n            </p>\r\n            <p>\r\n            Cách này có nhiều loại thi công: mảng productIDs trên mỗi user, 1 object riêng để map UserID và ProductID. Dù là cách nào thì khi chúng ta lấy thông tin sản phẩm trên WishList đều rất rắc rối.\r\n            </p>\r\n            <p>\r\n            VD nhé wish list ta có [1,4,8], 3 sản phẩm với ID lần lược là 1,4 và 8. Khi ta cần lấy các chi tiết các sản phẩm này (màn hình danh sách wish list của user chẳng hạn) thì chúng ta phải đi lấy sản\r\n             phẩm có ID là 1, rồi 4, rôi 8. Mà hàm lấy details nó chạy async nên chúng ta phải dùng 1 cái group queue hoặc kỹ thuật lập trình tương đương để đảm bảo là đã fetch xong tất cả details cho mảng trên….\r\n            </p>\r\n            <p>\r\n            Ôi trời tất cả chỉ là do Firebase không có các câu lệnh query để join object hoặc kiểu aggressive hay map reduce gì cả. Bài toán trên nghe chừng khá đơn giản nhưng bắt gặp cũng không ít trên các ứng dụng phổ biến. \r\n            Chưa nói tới những ứng dụng có các mối quan hệ dữ liệu phức tạp hơn.\r\n            </p>\r\n            <p>\r\n            Vậy ta có nên sử dụng Firebase cho ứng dụng lớn không ?? Thật ra là cũng CÓ, nhưng nó là 1 phần của hệ thống chứ không phải tất cả. VD app bán hàng có thể dùng Firebase cho phần chat với chủ cửa hàng, \r\n            cập nhật trạng thái đơn hàng realtime chẳng hạn.\r\n            </p>\r\n            <p>\r\n            ** Thật ra ngắn gọn là ứng dụng lớn ít ai dùng serverless lắm, nếu không muốn sau này trả giá đắt để ngồi làm lại.\r\n\r\n            </p>\r\n            <p>\r\n            OK chúc các bạn thành công.\r\n            </p>\r\n            <p>\r\n                <b>Nguồn:</b> <a href='https://viettranx.com/blog/firebase-co-nen-dung-cho-ung-dung-lon/'>viettranx.com</a>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../../CSS/firebase.style.css\";\r\nexport default function fireba(){\r\n    return(\r\n        <div className=\"blog-about\">\r\n             <nav className=\"nav\">\r\n                <ul className=\"list\">\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/blog\">Blog</Link>\r\n                    </li>\r\n                    <li className=\"item\">\r\n                        <Link class=\"linknav\" to=\"/about\">About</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <img src={process.env.PUBLIC_URL + '/airbnb-co-muc-thua-lo-hang-tram-trieu-do.png'} className=\"bnb\"></img>\r\n                <p>\r\n                Airbnb là một startup với mô hình kết nối người cần thuê nhà, thuê phòng nghỉ với những người có phòng cho thuê trên khắp thế giới. Với những ngôi nhà đẹp lung linh, giá cả phải chăng, chất lượng tốt, nhiều người đã chọn phòng qua Airbnb thay vì khách sạn\r\n                . Nhưng cũng vì vậy mà Airbnb phải đối mặt với câu hỏi được các chủ nhà quan tâm nhất: \"How do I pick the right price?\" (Làm thế nào để tôi chọn được đúng giá cho tài sản của mình?)\r\n                </p>\r\n                <p>\r\n                Thật khó để thiết lập giá phòng hợp lý, nhất là các cô bác lớn tuổi, chưa kể là giá phòng biến động theo mùa, theo xu hướng du lịch hoặc khu vực. Thấy được điều đó từ việc lắng nghe và\r\n                 phân tích những gì User tìm kiếm và booking trên Airbnb, họ đã ra mắt công cụ \"Smart Pricing\" giúp cho các host có thể thiết lập giá theo ngày dễ dàng hơn, cá nhân hoá hơn.\r\n                </p>\r\n                <p>\r\n                Từ việc đối mặt và giải quyết vấn đề của Airbnb, ta có thể rút ra được kết luận như sau:\r\n                </p>\r\n                <p>\r\n                - Việc lắng nghe và phân tích data rất quan trọng, nó cho bạn biết được những thiếu sót của bạn hay những khó khăn mà User đang đối mặt trên nền tảng của bạn.\r\n                </p>\r\n                <p>\r\n                - Sự tiện lợi, dễ dùng là yêu cầu cơ bản của những ứng dụng ngày nay, nhưng những tiện ích mà bạn mang lợi ở mỗi chức năng là điều thu hút và giữ chân User sử dụng nền tảng của mình.\r\n                </p>\r\n                <p>\r\n                    <b>Nguồn: </b> <a href='https://medium.com/airbnb-engineering/how-we-deliver-insights-to-hosts-7d836520a38'>Medium</a>\r\n                </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    HashRouter\r\n  } from \"react-router-dom\";\r\nimport MainPage from './MainPage';\r\nimport About from './About';\r\nimport Blog from './Blog';\r\nimport Firebas from './Blog/firebase';\r\nimport Airbnb from './Blog/airbnb';\r\nexport default function CustomRouter() {\r\n    return(\r\n      <HashRouter basename=\"/\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <MainPage />\r\n              </Route>\r\n              <Route exact path=\"/about/\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/blog/firebase-co-nen-dung-cho-ung-dung-lon/\">\r\n                <Firebas />\r\n              </Route>\r\n              <Route path=\"/blog/bnb-giu-chan-user\">\r\n                <Airbnb />\r\n              </Route>\r\n              <Route path=\"/blog\">\r\n                <Blog />\r\n              </Route>\r\n              \r\n            </Switch>\r\n          \r\n      \r\n    </HashRouter>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Router from './components/JS/Router';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <div className=\"App\">\r\n        <Router/>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}